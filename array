#include <stdio.h>

int main_array(void) {

	//배열
	/*int subway_1 = 30; // 지하철 1호차에 30명이 타고 있다.
	int subway_2 = 50;
	int subway_3 = 70;

	printf("지하철 1호차에 %d 명이 타고 있습니다.", subway_1);
	printf("지하철 2호차에 %d 명이 타고 있습니다.", subway_2);
	printf("지하철 3호차에 %d 명이 타고 있습니다.", subway_3);*/

	// 여러 개의 변수를 함께, 동시에 생성.
	/*int subway_array[3]; // 배열은 0부터 시작하므로 subway_array[0], [1], [2] 생성.
	subway_array[0] = 30;
	subway_array[1] = 40;
	subway_array[2] = 50;

	for (int i = 0; i < 3; i++) {
		printf("지하철 %d호차에 %d 명이 타고 있습니다.\n", i + 1, subway_array[i]);
	}*/

	// 값 설정 방법
	/*int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
	for (int i = 0; i < 10; i++) {
		printf("%d\n", arr[i]);
	}*/

	// 배열 크기는 항상 정수로 선언.
	/*int size = 10;
	int arr[10];*/

	/*int arr[10] = {1, 2}; // 3번째 값부터는 자동으로 0으로 초기화됨.
	for (int i = 0; i < 10; i++) {
		printf("%d\n", arr[i]);
	}*/

	/*int arr[] = { 1, 2 };*/ // = arr[2]

	/*float arr_f[5] = { 1.0f, 2.0f, 3.0f };
	for (int i = 0; i < 5; i++) {
		printf("%.2f\n", arr_f[i]);
	}*/

	// 문자 vs 문자열
	/*char c = 'A';
	printf("%c", c);*/

	// 문자열 끝에는 "끝"을 의미하는 NULL 문자 '\0'이 포함되어야 하므로 한자리가 비워져야 함.
	/*char str[6] = "coding";*/ // [c] [o] [d] [i] [n] [g] [\0]
	/*char str[7] = "coding";
	printf("%s", str);*/

	/*char str[] = "coding";
	printf("%s\n", str);
	printf("%d\n", sizeof(str));*/ // coding + \0 이므로 7자리. *sizeof: 문자열의 크기

	/*for (int i = 0; i < sizeof(str); i++) {
		printf("%c\n", str[i]);
	}*/

	/*char kor[] = "문자열";
	printf("%s\n", kor);
	printf("%d\n", sizeof(kor));*/ // 영어 한 글자 - 1byte, 한글 한 글자 - 2byte, char 크기 단위: 1byte

	/*char c_array[7] = { 'c', 'o', 'd', 'i', 'n', 'g', '\0'};
	char c_array[6] = { 'c', 'o', 'd', 'i', 'n', 'g' };
	printf("%s", c_array);*/

	/*char c_array[10] = { 'c', 'o', 'd', 'i', 'n', 'g'};
	printf("%s\n", c_array);
	for (int i = 0; i < sizeof(c_array); i++) {
		printf("%c\n", c_array[i]); // 문자열에 남는 공간이 있으면 자동으로 NULL문자가 들어감.
	}*/

	/*printf("%s\n", c_array);
	for (int i = 0; i < sizeof(c_array); i++) {
		printf("%d\n", c_array[i]); // ASCII 코드 값 출력(NULL 문자는 0으로 출력됨)
	}*/

	/*char name[256];
	printf("이름을 입력하세요.\n");
	scanf_s("%s", name, sizeof(name)); // 문자열 'name'보다 작은 사이즈만큼 입력받아서 name에 입력하기.
	printf("%s\n", name);*/

	// 참고: ASCII 코드? ANSI(미국표준협회)에서 제시한 표준 코드 체계
	// 7bit, 총 128개 코드 (0~127)
	// a = 97(문자 a의 아스키코드 정수값) A = 65 0 = 48

	/*printf("%c\n", 'a');
	printf("%d\n", 'a');

	printf("%c\n", 'b');
	printf("%d\n", 'b');

	printf("%c\n", 'A');
	printf("%d\n", 'A');

	printf("%c\n", '\0');
	printf("%d\n", '\0');

	printf("%c\n", '0');
	printf("%d\n", '0');

	printf("%c\n", '1');
	printf("%d\n", '1');*/

	// 참고2: 0~127 사이의 아스키코드 정수값에 해당하는 문자 확인
	for (int i = 0; i < 128; i++) {
		printf("아스키코드 정수 %d: %c\n", i, i);
	}
	return 0;
}
