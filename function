#include <stdio.h>

//선언
/*void p(int num);
void function_without_return();
int function_with_return();
void function_without_params();
void function_with_params(int num1, int num2, int num3); // 3개의 정수를 받는 함수

int apple(int total, int ate); // 전체 total 개에서 ate 개를 먹고 남은 수를 반환*/

int plus(int num1, int num2);
int sub(int num1, int num2);
int mul(int num1, int num2);
int div(int num1, int num2);
//void p(int total);


int main(void) {
	// function
	// 계산기

	/*int num = 2;
	//printf("num은 %d입니다.\n", num);
	p(num);

	// 2 + 3 = ?
	num = num + 3;
	//printf("num은 %d입니다.\n", num);
	p(num);

	// 5 - 1 = ?
	num -= 1; // num = num - 1;
	//printf("num은 %d입니다.\n", num);
	p(num);

	// 4 * 3 = ?
	num *= 3;
	//printf("num은 %d입니다.\n", num);
	p(num);

	// 12 / 6 = ?
	num /= 6;
	//printf("num은 %d입니다.\n", num);
	p(num);*/


	// 함수 종류

	// 반환값이 없는 함수: void 함수이름();으로 앞에서 main 선언, main 뒤에서 정의, main에서 사용.
	/*function_without_return();*/ // 사용

	// 반환값이 있는 함수
	/*int ret = function_with_return(); // 반환값을 받음.
	p(ret);*/ // 함수 p에 반환값 ret을 넣음으로써 num = 10이 됨.

	// 파라미터(전달값)이 없는 함수
	/*function_without_params();*/

	// 파라미터(전달값)이 있는 함수
	/*function_with_params(10, 20, 30);*/ // () 안의 값은 각각 num1, num2, num3에 전달할 값.

	// 파라미터(전달값)도 받고 반환값도 있는 함수.
	/*int ret = apple(5, 2);*/ // 5개의 사과 중에서 2개를 먹었어요.
						   // apple 함수를 호출한 후 전달받은 값을 ret 변수에 반환함.
	/*printf("사과 5개 중에 2개를 먹으면 %d개가 남아요.\n", ret);*/
	/*printf("사과 %d개 중에 %d개를 먹으면 %d개가 남아요.\n", 10, 4, apple(10, 4));*/


	// 계산기 함수

	/*int total = plus(10, 2);
	p(total);

	total = sub(10, 2);
	p(total);

	total = mul(10, 2);
	p(total);

	total = div(10, 2);
	p(total);*/

	plus(8, 3);
	sub(10, 5);
	mul(20, 3);
	div(10, 2);

	return 0;
}

// 정의

/*void p(int num) {
	printf("num은 %d입니다.\n", num);
}
void function_without_return() {
	printf("반환값이 없는 함수입니다.\n");
}
int function_with_return() {
	printf("반환값이 있는 함수입니다.\n");
	return 10; // 10을 반환할 것임을 정의.
}
void function_without_params() {
	printf("전달값이 없는 함수입니다.\n");
}
void function_with_params(num1, num2, num3) {
	printf("전달값이 있는 함수이며 전달받은 값은 %d, %d, %d입니다.\n", num1, num2, num3);
}

int apple(int total, int ate) {
	printf("전달값과 반환값이 있는 함수입니다.\n");
	return total - ate; // 반환할 값 = 전체 사과 수 - 먹은 사과 수
}*/


// 계산기

/*void p(int total) {
	printf("계산된 값은 %d입니다.\n", total);
}
int plus(int num1, int num2) {
	return num1 + num2;
}
int sub(int num1, int num2) {
	return num1 - num2;
}
int mul(int num1, int num2) {
	return num1 * num2;
}
int div(int num1, int num2) {
	return num1 / num2;
}*/

int plus(int num1, int num2) {
	int total = num1 + num2;
	printf("%d + %d = %d\n", num1, num2, total);
}
int sub(int num1, int num2) {
	int total = num1 - num2;
	printf("%d - %d = %d\n", num1, num2, total);
}
int mul(int num1, int num2) {
	int total = num1 * num2;
	printf("%d * %d = %d\n", num1, num2, total);
}
int div(int num1, int num2) {
	int total = num1 / num2;
	printf("%d / %d = %d\n", num1, num2, total);
}
